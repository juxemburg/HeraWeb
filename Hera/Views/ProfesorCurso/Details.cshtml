@model ProfesorCursoViewModel

@{
    ViewData["Title"] = "Details";
}

@section Styles {
    <enviroment names="Development">
        <link href="~/css/Autocomplete/easy-autocomplete.min.css" rel="stylesheet" />
        <link href="~/css/Autocomplete/easy-autocomplete.themes.min.css" rel="stylesheet" />
    </enviroment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/css/autocomplete.min.css" asp-append-version="true" />
    </environment>
}

<section>
    <div class="container">
        <h2 class="title">
            Información del curso
            <a asp-action="Edit"
               asp-controller="Curso"
               class="btn btn-sm btn-info btn-fab btn-fab-mini">
                <i class="material-icons icon-lg">edit</i>
            </a>
        </h2>
    </div>
</section>
<section class="section-gray">
    <div class="container padding-30">
        <div class="row">
            <div class="col-sm-6 col-md-5 col-lg-4">
                <div class="card">
                    <div class="card-content">
                        <h4 class="text-info category">
                            <i class="material-icons">info</i>
                            Información básica
                        </h4>
                        <div>
                            <dl class="">
                                <dt>
                                    @Html.DisplayNameFor(model => model.Curso.Nombre)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Curso.Nombre)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.Curso.Descripcion)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Curso.Descripcion)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.Curso.Password)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Curso.Password)
                                </dd>
                                <dt>
                                    Desafío inicial
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Curso.Desafio.Nombre)
                                </dd>
                            </dl>
                        </div>
                        <div class="footer">
                            <div class="stats">
                                <i class="material-icons">favorite</i> 342 ·
                                <i class="material-icons">chat_bubble</i> 45
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-md-6">
                
                
            </div>
        </div>
    </div>
</section>
<section>
    <div class="container-fluid">
        <h2 class="section-title">Progreso de tus estudiantes</h2>
        <div class="row">
            <div class="col-md-2 text-center">
                <h4 class="title">Acciones</h4>

                <span type="button" class=" btn-tooltip" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="Agregar Desafío">
                    <button class="btn btn-sm btn-info btn-round" data-toggle="modal" data-target="#myModal">
                        <i class="material-icons icon-lg">add</i>
                    </button>
                </span>
                <span type="button" class=" btn-tooltip" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="Agregar Desafío">
                    <button class="btn btn-sm btn-danger btn-round" data-toggle="modal" data-target="#myModal">
                        <i class="material-icons icon-lg">remove</i>
                    </button>
                </span>
                <hr />
            </div>
            <div class="col-md-10">
                <table class="table table-responsive table-hover">
                    <thead>
                        <tr>
                            <th>
                                Estudiantes\Desafíos
                            </th>
                            <th>
                                <a asp-controller="ProfesorCurso" asp-action="Progres" asp-route-idDesafio="@Model.Curso.DesafioId">
                                    @Model.Curso.Desafio.Nombre
                                </a>
                            </th>
                            @foreach (var item in Model.Curso.Desafios)
                            {
                                <th>
                                    <a asp-controller="ProfesorCurso" asp-action="Progres" asp-route-idDesafio="@item.DesafioID">
                                        @item.Desafio.Nombre
                                    </a>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Curso.Estudiantes)
                        {
                            <tr>
                                <td>
                                    <strong>
                                        <a asp-action="Estudiante" asp-route-idCurso="@Model.Curso.Id" asp-route-idEstudiante="@item.EstudianteId">
                                            @item.Estudiante.NombreCompleto
                                        </a>
                                    </strong>
                                </td>
                                @if (Model.RegistrosCurso.ContainsKey(
new Tuple<int, int>(Model.Curso.DesafioId, item.EstudianteId)))
                                {
                                    var reg = Model.RegistrosCurso[
                                new Tuple<int, int>(Model.Curso.DesafioId, item.EstudianteId)];
                                    <td>
                                        <a class="btn btn-warning btn-xs"
                                           asp-action="Calificar"
                                           asp-controller="ProfesorEstudiante"
                                           asp-route-idCurso="@Model.Curso.Id"
                                           asp-route-idEstudiante="@item.EstudianteId"
                                           asp-route-idDesafio="@Model.Curso.DesafioId">
                                            @if (reg.First().CalificacionCualitativa != null
&& reg.First().CalificacionCualitativa.Completada)
                                            {
                                                <i class="material-icons">done</i>
                                            }
                                            else
                                            {
                                                <i class="material-icons">priority_high</i>
                                            }
                                        </a>
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                                @foreach (var desafio in Model.Curso.Desafios)
                                {
                                    if (Model.RegistrosCurso.ContainsKey(
                                        new Tuple<int, int>(desafio.DesafioID, item.EstudianteId)))
                                    {
                                        var reg = Model.RegistrosCurso[
                                        new Tuple<int, int>(desafio.DesafioID, item.EstudianteId)];
                                        <td>
                                            <a class="btn btn-warning btn-xs"
                                               asp-action="Calificar"
                                               asp-controller="ProfesorEstudiante"
                                               asp-route-idCurso="@Model.Curso.Id"
                                               asp-route-idEstudiante="@item.EstudianteId"
                                               asp-route-idDesafio="@desafio.DesafioID">
                                                @if (reg.First().CalificacionCualitativa != null
&& reg.First().CalificacionCualitativa.Completada)
                                                {
                                                    <i class="material-icons">done</i>
                                                }
                                                else
                                                {
                                                    <i class="material-icons">priority_high</i>
                                                }
                                            </a>

                                        </td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td colspan="4">
                                <p>
                                    <strong>Nota: </strong>
                                    Pendientes
                                    <i class="material-icons icon-md">
                                        priority_high
                                    </i>
                                    -
                                    Calificados
                                    <i class="material-icons icon-md">
                                        done
                                    </i>
                                </p>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</section>








@section Modals {
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Añadir Desafío</h4>
                    <a class="btn btn-info" asp-action="Create" asp-controller="Desafios" target="_blank">
                        Crear nuevo desafío
                    </a>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="AddDesafio" asp-controller="Cursos" class="form-horizontal">
                        <input id="input-desafioId" type="hidden" name="DesafioId" value="" />
                        <input name="Id" value="@Model.Curso.Id" type="hidden" />
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Nombre</label>
                            <div class="col-sm-10">
                                <input id="input-desafioNombre" name="Nombre" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Descripción</label>
                            <div class="col-sm-10">
                                <input id="input-desafioDescripcion" type="text" name="Descripcion" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Dificultad</label>
                            <div class="col-sm-10">
                                <input id="input-desafioDificultad" type="number" name="Dificultad" class="form-control" disabled />
                            </div>
                        </div>
                        <div class="form-group">
                            <input class="btn btn-info" type="submit" value="Agregar éste desafío" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
}
@section Scripts {
    <environment names="Development">
        <script src="~/js/Autocomplete/jquery.easy-autocomplete.min.js"></script>
        <script src="~/js/Autocomplete/autocomplete-client.js"></script>
        <script src="~/js/Cursos/Details.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/js/autocomplete.min.js"></script>
        <script src="~/js/cursos.min.js"></script>
    </environment>
}
